
# Modern defaults we want
boot-location: modules
# This one at least historically broke compatibility with Anaconda, but
# let's use it by default now.
machineid-compat: true
# Be minimal
recommends: false

ignore-removed-users:
  - root
ignore-removed-groups:
  - root
etc-group-members:
  - wheel
  - sudo
  - systemd-journal
  - adm

check-passwd:
  type: "file"
  filename: "passwd"
check-groups:
  type: "file"
  filename: "group"

include:
  - networking-tools.yaml
  - persistent-journal.yaml
  - system-configuration.yaml
  - tmpfiles.d.yaml
  - tmpfs.yaml
  - user-experience.yaml

remove-from-packages:
  # Generally we expect other tools to do this (e.g. Ignition or cloud-init)
  - [systemd, /usr/lib/systemd/system/sysinit.target.wants/systemd-firstboot.service]
  # We don't want auto-generated mount units. See also
  # https://github.com/systemd/systemd/issues/13099
  - [systemd-udev, /usr/lib/systemd/system-generators/systemd-gpt-auto-generator]
  # Drop some buggy sysusers fragments which do not match static IDs allocation:
  # https://bugzilla.redhat.com/show_bug.cgi?id=2105177
  - [dbus-common, /usr/lib/sysusers.d/dbus.conf]
  # The grub bits are mainly designed for desktops, and IMO haven't seen
  # enough testing in concert with ostree. At some point we'll flesh out
  # the full plan in https://github.com/coreos/fedora-coreos-tracker/issues/47
  - [grub2-tools, /etc/grub.d/08_fallback_counting,
                  /etc/grub.d/10_reset_boot_success,
                  /etc/grub.d/12_menu_auto_hide,
                  /usr/lib/systemd/.*]

automatic-version-prefix: "${releasever}.<date:%Y%m%d>"
mutate-os-release: "${releasever}"

packages:
  - nano
  - systemd-container
  - fuse-overlayfs
  - slirp4netns
  - containernetworking-plugins
  - podman-plugins
  - dnsmasq
  - aardvark-dns
  - netavark
  - nfs-utils-coreos
  - iptables-nft
  - iptables-services
  - WALinuxAgent-udev
  - libsss_sudo
  - sssd-client
  - sssd-ad
  - sssd-ipa
  - sssd-krb5
  - sssd-ldap
  - attr
  - openssl
  - lsof
  - ncurses
  - kbd
  - zram-generator
  - systemd-resolved
  - rpm-ostree
  - ostree
  - nss-altfiles
  - systemd
  - bootc
  - gdisk
  - btrfs-progs
  - dosfstools
  - e2fsprogs
  - xfsprogs
  - bootupd
  - fwupd

# Include the qemu-user-static-x86 package on aarch64 and s390x FCOS images
# to allow access to the large inventory of containers only built for x86_64.
# https://github.com/coreos/fedora-coreos-tracker/issues/1237
packages-x86_64:
  - irqbalance
  - grub2
  - grub2-efi-x64
  - efibootmgr
  - shim
  - microcode_ctl
packages-ppc64le:
  - irqbalance
  - librtas
  - powerpc-utils-core
  - ppc64-diag-rtas
  - grub2
  - ostree-grub2
packages-aarch64:
  - irqbalance
  - grub2-efi-aa64
  - efibootmgr
  - shim

# Things we don't expect to ship on the host.  We currently
# have recommends: false so these could only come in via
# hard requirement, in which case the build will fail.
exclude-packages:
  - perl
  - perl-interpreter
  - nodejs
  - grubby
  - cowsay
  - initscripts
  - plymouth
  - NetworkManager-initscripts-ifcfg-rh
  - kernel-debug-core

postprocess:
  # Undo RPM scripts enabling units; we want the presets to be canonical
  # https://github.com/projectatomic/rpm-ostree/issues/1803
  - |
    #!/usr/bin/env bash
    set -xeuo pipefail
    rm -rf /etc/systemd/system/*
    systemctl preset-all
    rm -rf /etc/systemd/user/*
    systemctl --user --global preset-all
  # Default to iptables-nft. Otherwise, legacy wins. We can drop this once/if we
  # remove iptables-legacy. This is needed because alternatives don't work
  # https://github.com/coreos/fedora-coreos-tracker/issues/677
  # https://github.com/coreos/fedora-coreos-tracker/issues/676
  - |
    #!/usr/bin/env bash
    set -xeuo pipefail
    ln -sf /usr/sbin/ip6tables-nft         /etc/alternatives/ip6tables
    ln -sf /usr/sbin/ip6tables-nft-restore /etc/alternatives/ip6tables-restore
    ln -sf /usr/sbin/ip6tables-nft-save    /etc/alternatives/ip6tables-save
    ln -sf /usr/sbin/iptables-nft          /etc/alternatives/iptables
    ln -sf /usr/sbin/iptables-nft-restore  /etc/alternatives/iptables-restore
    ln -sf /usr/sbin/iptables-nft-save     /etc/alternatives/iptables-save
  # See: https://github.com/coreos/fedora-coreos-tracker/issues/1253
  #      https://bugzilla.redhat.com/show_bug.cgi?id=2112857
  #      https://github.com/coreos/rpm-ostree/issues/3918
  # Temporary workaround to remove the SetGID binary from liblockfile that is
  # pulled by the s390utils but not needed for /usr/sbin/zipl.
  - |
    #!/usr/bin/env bash
    set -xeuo pipefail
    rm -f /usr/bin/dotlockfile
  # Set up default root config
  - |
    #!/usr/bin/env bash
    mkdir -p /usr/lib/ostree
    cat > /usr/lib/ostree/prepare-root.conf << EOF
    [sysroot]
    readonly = true
    EOF
  # bootupd
  - |
    #!/bin/bash
    set -xeuo pipefail
    # Until we have https://github.com/coreos/rpm-ostree/pull/2275
    mkdir -p /run
    # Transforms /usr/lib/ostree-boot into a bootupd-compatible update payload
    /usr/bin/bootupctl backend generate-update-metadata /
  # dracut
  - |
    #!/usr/bin/env bash
    mkdir -p /usr/lib/dracut/dracut.conf.d
    cat > /usr/lib/dracut/dracut.conf.d/20-bootc-base.conf << 'EOF'
    # We want a generic image; hostonly makes no sense as part of a server side build
    hostonly=no
    dracutmodules+=" kernel-modules dracut-systemd systemd-initrd base ostree "
    EOF
    cat > /usr/lib/dracut/dracut.conf.d/22-bootc-generic.conf << 'EOF'
    # Extra modules that we want by default that are known to exist in the kernel
    dracutmodules+=" virtiofs "
    EOF
    cat > /usr/lib/dracut/dracut.conf.d/30-bootc-tier-1.conf << 'EOF'
    dracutmodules+=" lvm crypt "
    EOF
    cat > /usr/lib/dracut/dracut.conf.d/49-bootc-tpm2-tss.conf << 'EOF'
    # We want this for systemd-cryptsetup tpm2 locking
    dracutmodules+=" tpm2-tss "
    EOF
